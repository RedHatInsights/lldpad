/*
 *  Implementation of EVB according to IEEE 802.1Qbg
 *  (c) Copyright IBM Corp. 2012
 *
 *  Author(s): Thomas Richter <tmricht at linux.vnet.ibm.com>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms and conditions of the GNU General Public License,
 *  version 2, as published by the Free Software Foundation.
 *
 *  This program is distributed in the hope it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc.,
 *  51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
 *
 *  The full GNU General Public License is included in this distribution in
 *  the file called "COPYING".
 *
 */

/*
 * ECP Protocol test data. Define a complete ECP DU in hex. One complete set
 * is needed for each transmission.
 * The first column defines the run time of the test program  in seconds
 * when the remaining data on this line will be sent. The rest of the line are
 * data fields which define the TLVs.
 * Line limit is 5KB, long lines can be split  with \\ as last character.
 *
 * The files are preprocessed with cpp before being read by the test program.
 *
 * The data fields per line are
 * 1. time
 * 2. destination MAC
 * 3. source MAC (- is replaced by the senders MAC address)
 * 4. ethertype
 * 5. ECP header and paylaod data field according to standard 802.1qbg 
 * 6. Optional. Several TLVs starting with @ which are expected results.
 *    Its an error is it is missing in the reply or TLV differs.
 */
/*
 * ECP negotiation
 * Bridge offer reflective relay.
 * Check that lldpad starts ecp and vdp transmit state machines.
 */

#include	"defines.vdp"

5	lldpad_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_strr end_tlv @evb_strr_ack
6	lldpad_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_strr1 end_tlv @evb_strr_ack2
7	lldpad_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_strr1 end_tlv @evb_strr_ack2
8	lldpad_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_strr1 end_tlv @evb_strr_ack2
9	lldpad_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_strr1 end_tlv @evb_strr_ack2

39	lldpad_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_strr1 end_tlv @evb_strr_ack2

69	lldpad_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_strr1 end_tlv @evb_strr_ack2

90	lldpad_mac - lldp_type chassis_tlv port_tlv ttl_tlv0 end_tlv
