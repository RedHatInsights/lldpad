.PU
.TH evbtest 1 "LLDPAD" "Revision: 0.1"
.SH NAME
evbtest \- EVB Protocol Test Program for LLDPAD
.SH SYNOPSIS
.ll +8
.B evbtest
[ \-d duration ] [ \-i\ device] [ \-t timeout ] [ \-T timeout ] [ \-v ] [ file ]
.br
.ll -8
.SH DESCRIPTION
.B Evbtest
sends IEEE 802.1ad LLDP protocol messages which contain
an IEEE802.1Qbg EVB data unit TLV.
The purpose of the low level test program is to test 
.BR lldpad (8)
EVB module interaction by sending EVB TLV data.
The LLDP data is read from one or more files,
the response received can be displayed on the screen and
optionally checked against an expected value.
If no file is specified
.B evbtest 
only listens but does not send any LLDP data units.
A dash stands for standard input.
The input files are preprocessed by 
.BR cpp (1).
All
.BR cpp (1)
features can be used, including comments, defines, include files.
.SS Event Handling
.B evbtest
uses the select(2) system call to wait for a message and
a timer event.
The timer is a periodic timer and initially loaded
with the values specified with the options -t and -T.
The default value is one second and zero nano seconds.
Each time the timer expires
.B evbtest 
checks for messages to send.
If the elapsed run time of the program is
larger or equal to the time specified in the first field
of the configuraion file, those lines are transmitted.
Note that only one transmission per timer invocation
is capable to check optional replies for an expected TLV.
If more than one line have the same elapsed time, then only
the last line sent can have expected reply TLVs (see below).
.SS Input File Layout
The input file is read line by line.
Each line specifies a complete
entry, long lines can be split by a
trailing backslash newline combination.
Each line is divided by blanks or tabs into several fields.
.IP 1
The first field specifies the elapsed time in seconds
when the remaining data on the line will be sent.
.IP 2
The second field specifies the destination MAC address.
.IP 3
The third field specifies the sender's MAC address.
A dash ('-') will be replaced by the sender's MAC address on 
transmission.
.IP 4
The forth field specifies the ethertype variable.
For LLDP protocol this should be 88cc.
.IP 5
The remaining fields specify the LLDP protocol TLVs.
There is no check for consistency, but at least the 
mandatory LLDP protocol TLVs (which are
chassis identifier, port identifer, time to live (TTL), and
End) have to be listed.
To be useful an EVB TLV should be included.
.IP 6
When a TLV is preceded by an at-sign ('@'), this TLV
is not
transmitted, but added to an expected reply list.
When the LLDP data unit is sent out, a possible
reply from
.BR lldpad (8)
is waited for and searched.
If the reply contains this TLV and they match, the program
continues. If they mismatch or the expected TLV is not
found in the reply,
.B evbtest 
terminates.
If there is no reply at all
.B evbtest
issues a warning, discards the expected TLV list and continues.
Missing replies, even when expected TLVs are specified, do not cause
.B evbtest
to terminate.
.B evbtest
waits for a possible reply up to the next timer expiration.
This simulates the LLDP TLV exchange mechanims as defined in the standard.
.PP
All fields represent byte streams.
Each byte is denoted by a two digit hexadecimal number.
Bytes are delimited by colon.
Little to no input file checking is done.
As an example the string 88:cc
is the ethertype field for LLDP data units.
.sp 1
Here is a sample input file with explanations.
.IP A.
The first line contains an EVP TLV and is sent after four seconds
program run time. The line expects a reply from 
.BR lldpad (8)
which contains the reply to the EVB TLV just sent out.
In this case
.BR lldpad (8)
is configured as station and does not request 
reflective-relay. Other values are defaults.
.IP B.
The second, third and forth line resend
the first line to simulate fast initialization.
Same replies are expected.
.IP C.
The last line is executed after 20 seconds program run time.
It sends a TTL TLV of value 0 and causes the EVB TLV on the
remote side to be discarded.
.PP
.ne 20
.EX
.nf
/*
 * Startup the EVB negotiation
 */

#define	dst_mac		01:80:c2:00:00:0e
#define	lldp_type		88:cc
#define	chassis_tlv		02:07:06:64:75:6d:6d:79:00
#define	port_tlv		04:05:05:65:74:68:30
#define	ttl_tlv120		06:02:00:78
#define	ttl_tlv0		06:02:00:00
#define	end_tlv		00:00

#define	evbhead		fe:09:00:80:c2:0d
/* No Reflective Relay on bridge */
#define	evb_norr		evbhead:00:00:00:40:00
#define	evb_norr_ack	evbhead:00:00:68:88:08

4	dst_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_norr end_tlv @evb_norr_ack
5	dst_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_norr end_tlv @evb_norr_ack
6	dst_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_norr end_tlv @evb_norr_ack
7	dst_mac - lldp_type chassis_tlv port_tlv ttl_tlv120 \\
		evb_norr end_tlv @evb_norr_ack
20	dst_mac - lldp_type chassis_tlv port_tlv ttl_tlv0 end_tlv
.fi
.EE
.SH OPTIONS
.TP
.B "\-v"
Enables verbose mode. This option can be applied more
than once.
Each time specified, the output is more verbose.
If set once, 
.B evbtest
displays the progress of sent and received messages.
If set twice,
the message contents is also displayed.
If set three times,
the event wait time is also displayed.
.TP
.B "\-d\fIduration\fP"
Specifies the number in seconds the program will run.
Defaults to 120 seconds of total run time.
.TP
.B "\-i\fIinterface\fP"
Specifies the interface name to transmit the data.
A raw socket will be opened on this interface to
send and receive data.
.TP
.B "\-t\fItimeout\fP"
Specifies the time (seconds portion) to wait for an event.
Default is one.
.TP
.B "\-T\fItimeout\fP"
Specifies the time (nano-seconds portion) to wait for an event.
Default is zero.
.SH "ENVIRONMENT"
Linux and virtual machines with a virtual bridge.
Requires Linux kernel 3.2 or later.
Disable stp on the virtual bridge to forward mutlicast mac addresses
01:80:C2:00:00:00!
.SH "SEE ALSO"
lldpad(8), lldptool(8)
.SH DIAGNOSTICS
Exit status is zero on success and non zero on failure or mismatch.
.SH AUTHOR
Thomas Richter, IBM Research and Development GmbH, Germany.
